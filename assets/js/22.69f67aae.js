(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{61:function(t,s,a){"use strict";a.r(s);var n=a(0),c=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"string对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#string对象","aria-hidden":"true"}},[t._v("#")]),t._v(" String对象")]),a("h2",{attrs:{id:"实例属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实例属性","aria-hidden":"true"}},[t._v("#")]),t._v(" 实例属性")]),a("h3",{attrs:{id:"string-prototype-length"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#string-prototype-length","aria-hidden":"true"}},[t._v("#")]),t._v(" String.prototype.length")]),a("p",[t._v("字符串实例的"),a("code",[t._v("length")]),t._v("属性返回字符串的长度。")]),a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{attrs:{class:"token string"}},[t._v("'abc'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),a("span",{attrs:{class:"token comment"}},[t._v("// 3")]),t._v("\n")])]),a("h2",{attrs:{id:"实例方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实例方法","aria-hidden":"true"}},[t._v("#")]),t._v(" 实例方法")]),a("h3",{attrs:{id:"string-prototype-charat"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#string-prototype-charat","aria-hidden":"true"}},[t._v("#")]),t._v(" String.prototype.charAt()")]),a("p",[a("code",[t._v("charAt")]),t._v("方法返回指定位置的字符，参数是从"),a("code",[t._v("0")]),t._v("开始编号的位置。")]),a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" s "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("String")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'abc'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\ns"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("charAt")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v('// "b"')]),t._v("\ns"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("charAt")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v('// "c"')]),t._v("\n")])]),a("p",[t._v("这个方法完全可以用数组下标替代。")]),a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{attrs:{class:"token string"}},[t._v("'abc'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("charAt")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v('// "b"')]),t._v("\n"),a("span",{attrs:{class:"token string"}},[t._v("'abc'")]),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v('// "b"')]),t._v("\n")])]),a("p",[t._v("如果参数为负数，或大于等于字符串的长度，"),a("code",[t._v("charAt")]),t._v("返回空字符串。")]),a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{attrs:{class:"token string"}},[t._v("'abc'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("charAt")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token operator"}},[t._v("-")]),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v('// ""')]),t._v("\n"),a("span",{attrs:{class:"token string"}},[t._v("'abc'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("charAt")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("3")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v('// ""')]),t._v("\n")])]),a("h3",{attrs:{id:"string-prototype-charcodeat"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#string-prototype-charcodeat","aria-hidden":"true"}},[t._v("#")]),t._v(" String.prototype.charCodeAt()")]),a("p",[a("code",[t._v("charCodeAt")]),t._v("方法返回字符串指定位置的 Unicode 码点（十进制表示），相当于"),a("code",[t._v("String.fromCharCode()")]),t._v("的逆操作。")]),a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{attrs:{class:"token string"}},[t._v("'abc'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("charCodeAt")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 98")]),t._v("\n")])]),a("p",[t._v("上面代码中，"),a("code",[t._v("abc")]),t._v("的"),a("code",[t._v("1")]),t._v("号位置的字符是"),a("code",[t._v("b")]),t._v("，它的 Unicode 码点是"),a("code",[t._v("98")]),t._v("。")]),a("p",[t._v("如果没有任何参数，"),a("code",[t._v("charCodeAt")]),t._v("返回首字符的 Unicode 码点。")]),a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{attrs:{class:"token string"}},[t._v("'abc'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("charCodeAt")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 97")]),t._v("\n")])]),a("p",[t._v("如果参数为负数，或大于等于字符串的长度，"),a("code",[t._v("charCodeAt")]),t._v("返回"),a("code",[t._v("NaN")]),t._v("。")]),a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{attrs:{class:"token string"}},[t._v("'abc'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("charCodeAt")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token operator"}},[t._v("-")]),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// NaN")]),t._v("\n"),a("span",{attrs:{class:"token string"}},[t._v("'abc'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("charCodeAt")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("4")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// NaN")]),t._v("\n")])]),a("p",[t._v("注意，"),a("code",[t._v("charCodeAt")]),t._v("方法返回的 Unicode 码点不会大于65536（0xFFFF），也就是说，只返回两个字节的字符的码点。如果遇到码点大于 65536 的字符（四个字节的字符），必需连续使用两次"),a("code",[t._v("charCodeAt")]),t._v("，不仅读入"),a("code",[t._v("charCodeAt(i)")]),t._v("，还要读入"),a("code",[t._v("charCodeAt(i+1)")]),t._v("，将两个值放在一起，才能得到准确的字符。")]),a("h3",{attrs:{id:"string-prototype-concat"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#string-prototype-concat","aria-hidden":"true"}},[t._v("#")]),t._v(" String.prototype.concat()")]),a("p",[a("code",[t._v("concat")]),t._v("方法用于连接两个字符串，返回一个新字符串，不改变原字符串。")]),a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" s1 "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'abc'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" s2 "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'def'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\ns1"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("concat")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s2"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v('// "abcdef"')]),t._v("\ns1 "),a("span",{attrs:{class:"token comment"}},[t._v('// "abc"')]),t._v("\n")])]),a("p",[t._v("该方法可以接受多个参数。")]),a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{attrs:{class:"token string"}},[t._v("'a'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("concat")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'b'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'c'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v('// "abc"')]),t._v("\n")])]),a("p",[t._v("如果参数不是字符串，"),a("code",[t._v("concat")]),t._v("方法会将其先转为字符串，然后再连接。")]),a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" one "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" two "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("2")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" three "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'3'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{attrs:{class:"token string"}},[t._v("''")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("concat")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("one"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" two"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" three"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v('// "123"')]),t._v("\none "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" two "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" three "),a("span",{attrs:{class:"token comment"}},[t._v('// "33"')]),t._v("\n")])]),a("p",[t._v("上面代码中，"),a("code",[t._v("concat")]),t._v("方法将参数先转成字符串再连接，所以返回的是一个三个字符的字符串。作为对比，加号运算符在两个运算数都是数值时，不会转换类型，所以返回的是一个两个字符的字符串。")]),a("h3",{attrs:{id:"string-prototype-slice"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#string-prototype-slice","aria-hidden":"true"}},[t._v("#")]),t._v(" String.prototype.slice()")]),a("p",[a("code",[t._v("slice")]),t._v("方法用于从原字符串取出子字符串并返回，不改变原字符串。它的第一个参数是子字符串的开始位置，第二个参数是子字符串的结束位置（不含该位置）。")]),a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{attrs:{class:"token string"}},[t._v("'JavaScript'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("slice")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("4")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v('// "Java"')]),t._v("\n")])]),a("p",[t._v("如果省略第二个参数，则表示子字符串一直到原字符串结束。")]),a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{attrs:{class:"token string"}},[t._v("'JavaScript'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("slice")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("4")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v('// "Script"')]),t._v("\n")])]),a("p",[t._v("如果参数是负值，表示从结尾开始倒数计算的位置，即该负值加上字符串长度。")]),a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{attrs:{class:"token string"}},[t._v("'JavaScript'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("slice")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token operator"}},[t._v("-")]),a("span",{attrs:{class:"token number"}},[t._v("6")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v('// "Script"')]),t._v("\n"),a("span",{attrs:{class:"token string"}},[t._v("'JavaScript'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("slice")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("-")]),a("span",{attrs:{class:"token number"}},[t._v("6")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v('// "Java"')]),t._v("\n"),a("span",{attrs:{class:"token string"}},[t._v("'JavaScript'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("slice")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token operator"}},[t._v("-")]),a("span",{attrs:{class:"token number"}},[t._v("2")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("-")]),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v('// "p"')]),t._v("\n")])]),a("p",[t._v("如果第一个参数大于第二个参数，"),a("code",[t._v("slice")]),t._v("方法返回一个空字符串。")]),a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{attrs:{class:"token string"}},[t._v("'JavaScript'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("slice")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("2")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v('// ""')]),t._v("\n")])]),a("h3",{attrs:{id:"string-prototype-substring"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#string-prototype-substring","aria-hidden":"true"}},[t._v("#")]),t._v(" String.prototype.substring()")]),a("p",[a("code",[t._v("substring")]),t._v("方法用于从原字符串取出子字符串并返回，不改变原字符串，跟"),a("code",[t._v("slice")]),t._v("方法很相像。它的第一个参数表示子字符串的开始位置，第二个位置表示结束位置（返回结果不含该位置）。")]),a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{attrs:{class:"token string"}},[t._v("'JavaScript'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("substring")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("4")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v('// "Java"')]),t._v("\n")])]),a("p",[t._v("如果省略第二个参数，则表示子字符串一直到原字符串的结束。")]),a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{attrs:{class:"token string"}},[t._v("'JavaScript'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("substring")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("4")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v('// "Script"')]),t._v("\n")])]),a("p",[t._v("如果第一个参数大于第二个参数，"),a("code",[t._v("substring")]),t._v("方法会自动更换两个参数的位置。")]),a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{attrs:{class:"token string"}},[t._v("'JavaScript'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("substring")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("10")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("4")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v('// "Script"')]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 等同于")]),t._v("\n"),a("span",{attrs:{class:"token string"}},[t._v("'JavaScript'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("substring")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("4")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("10")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v('// "Script"')]),t._v("\n")])]),a("p",[t._v("上面代码中，调换"),a("code",[t._v("substring")]),t._v("方法的两个参数，都得到同样的结果。")]),a("p",[t._v("如果参数是负数，"),a("code",[t._v("substring")]),t._v("方法会自动将负数转为0。")]),a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{attrs:{class:"token string"}},[t._v("'Javascript'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("substring")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token operator"}},[t._v("-")]),a("span",{attrs:{class:"token number"}},[t._v("3")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v('// "JavaScript"')]),t._v("\n"),a("span",{attrs:{class:"token string"}},[t._v("'JavaScript'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("substring")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("4")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("-")]),a("span",{attrs:{class:"token number"}},[t._v("3")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v('// "Java"')]),t._v("\n")])]),a("p",[t._v("上面代码中，第二个例子的参数"),a("code",[t._v("-3")]),t._v("会自动变成"),a("code",[t._v("0")]),t._v("，等同于"),a("code",[t._v("'JavaScript'.substring(4, 0)")]),t._v("。由于第二个参数小于第一个参数，会自动互换位置，所以返回"),a("code",[t._v("Java")]),t._v("。")]),a("p",[t._v("由于这些规则违反直觉，因此不建议使用"),a("code",[t._v("substring")]),t._v("方法，应该优先使用"),a("code",[t._v("slice")]),t._v("。")]),a("h3",{attrs:{id:"string-prototype-substr"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#string-prototype-substr","aria-hidden":"true"}},[t._v("#")]),t._v(" String.prototype.substr()")]),a("p",[a("code",[t._v("substr")]),t._v("方法用于从原字符串取出子字符串并返回，不改变原字符串，跟"),a("code",[t._v("slice")]),t._v("和"),a("code",[t._v("substring")]),t._v("方法的作用相同。")]),a("p",[a("code",[t._v("substr")]),t._v("方法的第一个参数是子字符串的开始位置（从0开始计算），第二个参数是子字符串的长度。")]),a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{attrs:{class:"token string"}},[t._v("'JavaScript'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("substr")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("4")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("6")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v('// "Script"')]),t._v("\n")])]),a("p",[t._v("如果省略第二个参数，则表示子字符串一直到原字符串的结束。")]),a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{attrs:{class:"token string"}},[t._v("'JavaScript'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("substr")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("4")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v('// "Script"')]),t._v("\n")])]),a("p",[t._v("如果第一个参数是负数，表示倒数计算的字符位置。如果第二个参数是负数，将被自动转为0，因此会返回空字符串。")]),a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{attrs:{class:"token string"}},[t._v("'JavaScript'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("substr")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token operator"}},[t._v("-")]),a("span",{attrs:{class:"token number"}},[t._v("6")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v('// "Script"')]),t._v("\n"),a("span",{attrs:{class:"token string"}},[t._v("'JavaScript'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("substr")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("4")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("-")]),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v('// ""')]),t._v("\n")])]),a("p",[t._v("上面代码中，第二个例子的参数"),a("code",[t._v("-1")]),t._v("自动转为"),a("code",[t._v("0")]),t._v("，表示子字符串长度为"),a("code",[t._v("0")]),t._v("，所以返回空字符串。")]),a("h3",{attrs:{id:"string-prototype-indexof-，string-prototype-lastindexof"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#string-prototype-indexof-，string-prototype-lastindexof","aria-hidden":"true"}},[t._v("#")]),t._v(" String.prototype.indexOf()，String.prototype.lastIndexOf()")]),a("p",[a("code",[t._v("indexOf")]),t._v("方法用于确定一个字符串在另一个字符串中第一次出现的位置，返回结果是匹配开始的位置。如果返回"),a("code",[t._v("-1")]),t._v("，就表示不匹配。")]),a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{attrs:{class:"token string"}},[t._v("'hello world'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("indexOf")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'o'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 4")]),t._v("\n"),a("span",{attrs:{class:"token string"}},[t._v("'JavaScript'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("indexOf")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'script'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// -1")]),t._v("\n")])]),a("p",[a("code",[t._v("indexOf")]),t._v("方法还可以接受第二个参数，表示从该位置开始向后匹配。")]),a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{attrs:{class:"token string"}},[t._v("'hello world'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("indexOf")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'o'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("6")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 7")]),t._v("\n")])]),a("p",[a("code",[t._v("lastIndexOf")]),t._v("方法的用法跟"),a("code",[t._v("indexOf")]),t._v("方法一致，主要的区别是"),a("code",[t._v("lastIndexOf")]),t._v("从尾部开始匹配，"),a("code",[t._v("indexOf")]),t._v("则是从头部开始匹配。")]),a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{attrs:{class:"token string"}},[t._v("'hello world'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("lastIndexOf")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'o'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 7")]),t._v("\n")])]),a("p",[t._v("另外，"),a("code",[t._v("lastIndexOf")]),t._v("的第二个参数表示从该位置起向前匹配。")]),a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{attrs:{class:"token string"}},[t._v("'hello world'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("lastIndexOf")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'o'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("6")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 4")]),t._v("\n")])]),a("h3",{attrs:{id:"string-prototype-trim"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#string-prototype-trim","aria-hidden":"true"}},[t._v("#")]),t._v(" String.prototype.trim()")]),a("p",[a("code",[t._v("trim")]),t._v("方法用于去除字符串两端的空格，返回一个新字符串，不改变原字符串。")]),a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{attrs:{class:"token string"}},[t._v("'  hello world  '")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("trim")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v('// "hello world"')]),t._v("\n")])]),a("p",[t._v("该方法去除的不仅是空格，还包括制表符（"),a("code",[t._v("\\t")]),t._v("、"),a("code",[t._v("\\v")]),t._v("）、换行符（"),a("code",[t._v("\\n")]),t._v("）和回车符（"),a("code",[t._v("\\r")]),t._v("）。")]),a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{attrs:{class:"token string"}},[t._v("'\\r\\nabc \\t'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("trim")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 'abc'")]),t._v("\n")])]),a("h3",{attrs:{id:"string-prototype-tolowercase-，string-prototype-touppercase"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#string-prototype-tolowercase-，string-prototype-touppercase","aria-hidden":"true"}},[t._v("#")]),t._v(" String.prototype.toLowerCase()，String.prototype.toUpperCase()")]),a("p",[a("code",[t._v("toLowerCase")]),t._v("方法用于将一个字符串全部转为小写，"),a("code",[t._v("toUpperCase")]),t._v("则是全部转为大写。它们都返回一个新字符串，不改变原字符串。")]),a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{attrs:{class:"token string"}},[t._v("'Hello World'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("toLowerCase")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v('// "hello world"')]),t._v("\n\n"),a("span",{attrs:{class:"token string"}},[t._v("'Hello World'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("toUpperCase")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v('// "HELLO WORLD"')]),t._v("\n")])]),a("h3",{attrs:{id:"string-prototype-match"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#string-prototype-match","aria-hidden":"true"}},[t._v("#")]),t._v(" String.prototype.match()")]),a("p",[a("code",[t._v("match")]),t._v("方法用于确定原字符串是否匹配某个子字符串，返回一个数组，成员为匹配的第一个字符串。如果没有找到匹配，则返回"),a("code",[t._v("null")]),t._v("。")]),a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{attrs:{class:"token string"}},[t._v("'cat, bat, sat, fat'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("match")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'at'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v('// ["at"]')]),t._v("\n"),a("span",{attrs:{class:"token string"}},[t._v("'cat, bat, sat, fat'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("match")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'xt'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// null")]),t._v("\n")])]),a("p",[t._v("返回的数组还有"),a("code",[t._v("index")]),t._v("属性和"),a("code",[t._v("input")]),t._v("属性，分别表示匹配字符串开始的位置和原始字符串。")]),a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" matches "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'cat, bat, sat, fat'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("match")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'at'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nmatches"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("index "),a("span",{attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\nmatches"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("input "),a("span",{attrs:{class:"token comment"}},[t._v('// "cat, bat, sat, fat"')]),t._v("\n")])]),a("p",[a("code",[t._v("match")]),t._v("方法还可以使用正则表达式作为参数，详见《正则表达式》一章。")]),a("h3",{attrs:{id:"string-prototype-search-，string-prototype-replace"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#string-prototype-search-，string-prototype-replace","aria-hidden":"true"}},[t._v("#")]),t._v(" String.prototype.search()，String.prototype.replace()")]),a("p",[a("code",[t._v("search")]),t._v("方法的用法基本等同于"),a("code",[t._v("match")]),t._v("，但是返回值为匹配的第一个位置。如果没有找到匹配，则返回"),a("code",[t._v("-1")]),t._v("。")]),a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{attrs:{class:"token string"}},[t._v("'cat, bat, sat, fat'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("search")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'at'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n")])]),a("p",[a("code",[t._v("search")]),t._v("方法还可以使用正则表达式作为参数，详见《正则表达式》一节。")]),a("p",[a("code",[t._v("replace")]),t._v("方法用于替换匹配的子字符串，一般情况下只替换第一个匹配（除非使用带有"),a("code",[t._v("g")]),t._v("修饰符的正则表达式）。")]),a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{attrs:{class:"token string"}},[t._v("'aaa'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("replace")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'a'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'b'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v('// "baa"')]),t._v("\n")])]),a("p",[a("code",[t._v("replace")]),t._v("方法还可以使用正则表达式作为参数，详见《正则表达式》一节。")]),a("h3",{attrs:{id:"string-prototype-split"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#string-prototype-split","aria-hidden":"true"}},[t._v("#")]),t._v(" String.prototype.split()")]),a("p",[a("code",[t._v("split")]),t._v("方法按照给定规则分割字符串，返回一个由分割出来的子字符串组成的数组。")]),a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{attrs:{class:"token string"}},[t._v("'a|b|c'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("split")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'|'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v('// ["a", "b", "c"]')]),t._v("\n")])]),a("p",[t._v("如果分割规则为空字符串，则返回数组的成员是原字符串的每一个字符。")]),a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{attrs:{class:"token string"}},[t._v("'a|b|c'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("split")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("''")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v('// ["a", "|", "b", "|", "c"]')]),t._v("\n")])]),a("p",[t._v("如果省略参数，则返回数组的唯一成员就是原字符串。")]),a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{attrs:{class:"token string"}},[t._v("'a|b|c'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("split")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v('// ["a|b|c"]')]),t._v("\n")])]),a("p",[t._v("如果满足分割规则的两个部分紧邻着（即两个分割符中间没有其他字符），则返回数组之中会有一个空字符串。")]),a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{attrs:{class:"token string"}},[t._v("'a||c'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("split")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'|'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// ['a', '', 'c']")]),t._v("\n")])]),a("p",[t._v("如果满足分割规则的部分处于字符串的开头或结尾（即它的前面或后面没有其他字符），则返回数组的第一个或最后一个成员是一个空字符串。")]),a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{attrs:{class:"token string"}},[t._v("'|b|c'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("split")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'|'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v('// ["", "b", "c"]')]),t._v("\n"),a("span",{attrs:{class:"token string"}},[t._v("'a|b|'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("split")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'|'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v('// ["a", "b", ""]')]),t._v("\n")])]),a("p",[a("code",[t._v("split")]),t._v("方法还可以接受第二个参数，限定返回数组的最大成员数。")]),a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{attrs:{class:"token string"}},[t._v("'a|b|c'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("split")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'|'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// []")]),t._v("\n"),a("span",{attrs:{class:"token string"}},[t._v("'a|b|c'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("split")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'|'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v('// ["a"]')]),t._v("\n"),a("span",{attrs:{class:"token string"}},[t._v("'a|b|c'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("split")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'|'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("2")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v('// ["a", "b"]')]),t._v("\n"),a("span",{attrs:{class:"token string"}},[t._v("'a|b|c'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("split")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'|'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("3")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v('// ["a", "b", "c"]')]),t._v("\n"),a("span",{attrs:{class:"token string"}},[t._v("'a|b|c'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("split")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'|'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("4")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v('// ["a", "b", "c"]')]),t._v("\n")])]),a("p",[t._v("上面代码中，"),a("code",[t._v("split")]),t._v("方法的第二个参数，决定了返回数组的成员数。")]),a("p",[a("code",[t._v("split")]),t._v("方法还可以使用正则表达式作为参数，详见《正则表达式》一节。")]),a("h3",{attrs:{id:"string-prototype-localecompare"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#string-prototype-localecompare","aria-hidden":"true"}},[t._v("#")]),t._v(" String.prototype.localeCompare()")]),a("p",[a("code",[t._v("localeCompare")]),t._v("方法用于比较两个字符串。它返回一个整数，如果小于0，表示第一个字符串小于第二个字符串；如果等于0，表示两者相等；如果大于0，表示第一个字符串大于第二个字符串。")]),a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{attrs:{class:"token string"}},[t._v("'apple'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("localeCompare")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'banana'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// -1")]),t._v("\n"),a("span",{attrs:{class:"token string"}},[t._v("'apple'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("localeCompare")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'apple'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 0")]),t._v("\n")])]),a("p",[t._v("该方法的最大特点，就是会考虑自然语言的顺序。举例来说，正常情况下，大写的英文字母小于小写字母。")]),a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{attrs:{class:"token string"}},[t._v("'B'")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'a'")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n")])]),a("p",[t._v("上面代码中，字母"),a("code",[t._v("B")]),t._v("小于字母"),a("code",[t._v("a")]),t._v("。因为 JavaScript 采用的是 Unicode 码点比较，"),a("code",[t._v("B")]),t._v("的码点是66，而"),a("code",[t._v("a")]),t._v("的码点是97。")]),a("p",[t._v("但是，"),a("code",[t._v("localeCompare")]),t._v("方法会考虑自然语言的排序情况，将"),a("code",[t._v("B")]),t._v("排在"),a("code",[t._v("a")]),t._v("的前面。")]),a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{attrs:{class:"token string"}},[t._v("'B'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("localeCompare")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'a'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n")])]),a("p",[t._v("上面代码中，"),a("code",[t._v("localeCompare")]),t._v("方法返回整数1，表示"),a("code",[t._v("B")]),t._v("较大。")]),a("p",[a("code",[t._v("localeCompare")]),t._v("还可以有第二个参数，指定所使用的语言（默认是英语），然后根据该语言的规则进行比较。")]),a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{attrs:{class:"token string"}},[t._v("'ä'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("localeCompare")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'z'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'de'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// -1")]),t._v("\n"),a("span",{attrs:{class:"token string"}},[t._v("'ä'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("localeCompare")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'z'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'sv'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n")])]),a("p",[t._v("上面代码中，"),a("code",[t._v("de")]),t._v("表示德语，"),a("code",[t._v("sv")]),t._v("表示瑞典语。德语中，"),a("code",[t._v("ä")]),t._v("小于"),a("code",[t._v("z")]),t._v("，所以返回"),a("code",[t._v("-1")]),t._v("；瑞典语中，"),a("code",[t._v("ä")]),t._v("大于"),a("code",[t._v("z")]),t._v("，所以返回"),a("code",[t._v("1")]),t._v("。")])])}],!1,null,null,null);s.default=c.exports}}]);