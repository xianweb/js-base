(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{55:function(t,a,s){"use strict";s.r(a);var n=s(0),e=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"事件模型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事件模型","aria-hidden":"true"}},[t._v("#")]),t._v(" 事件模型")]),s("p",[t._v("事件的本质是程序各个组成部分之间的一种通信方式，也是异步编程的一种实现。DOM 支持大量的事件，本章介绍 DOM 的事件编程。")]),s("h2",{attrs:{id:"事件的传播"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事件的传播","aria-hidden":"true"}},[t._v("#")]),t._v(" 事件的传播")]),s("p",[t._v("一个事件发生后，会在子元素和父元素之间传播（propagation）。这种传播分成三个阶段。")]),s("ul",[s("li",[s("strong",[t._v("第一阶段")]),t._v("：从"),s("code",[t._v("window")]),t._v("对象传导到目标节点（上层传到底层），称为“捕获阶段”（capture phase）。")]),s("li",[s("strong",[t._v("第二阶段")]),t._v("：在目标节点上触发，称为“目标阶段”（target phase）。")]),s("li",[s("strong",[t._v("第三阶段")]),t._v("：从目标节点传导回"),s("code",[t._v("window")]),t._v("对象（从底层传回上层），称为“冒泡阶段”（bubbling phase）。")])]),s("p",[t._v("这种三阶段的传播模型，使得同一个事件会在多个节点上触发。")]),s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("p")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("点击"),s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("p")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),s("h2",{attrs:{id:"事件的代理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事件的代理","aria-hidden":"true"}},[t._v("#")]),t._v(" 事件的代理")]),s("p",[t._v("由于事件会在冒泡阶段向上传播到父节点，因此可以把子节点的监听函数定义在父节点上，由父节点的监听函数统一处理多个子元素的事件。这种方法叫做事件的代理（delegation）。")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" ul "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("querySelector")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'ul'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nul"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("addEventListener")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'click'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("event"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("event"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("target"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tagName"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("toLowerCase")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v("'li'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{attrs:{class:"token comment"}},[t._v("// some code")]),t._v("\n  "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),s("p",[t._v("上面代码中，"),s("code",[t._v("click")]),t._v("事件的监听函数定义在"),s("code",[t._v("<ul>")]),t._v("节点，但是实际上，它处理的是子节点"),s("code",[t._v("<li>")]),t._v("的"),s("code",[t._v("click")]),t._v("事件。这样做的好处是，只要定义一个监听函数，就能处理多个子节点的事件，而不用在每个"),s("code",[t._v("<li>")]),t._v("节点上定义监听函数。而且以后再添加子节点，监听函数依然有效。")]),s("p",[t._v("如果希望事件到某个节点为止，不再传播，可以使用事件对象的"),s("code",[t._v("stopPropagation")]),t._v("方法。")]),s("h2",{attrs:{id:"event-对象的实例属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#event-对象的实例属性","aria-hidden":"true"}},[t._v("#")]),t._v(" Event 对象的实例属性")]),s("h3",{attrs:{id:"event-currenttarget，event-target"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#event-currenttarget，event-target","aria-hidden":"true"}},[t._v("#")]),t._v(" Event.currentTarget，Event.target")]),s("p",[s("code",[t._v("Event.currentTarget")]),t._v("属性返回事件当前所在的节点，即正在执行的监听函数所绑定的那个节点。")]),s("p",[s("code",[t._v("Event.target")]),t._v("属性返回原始触发事件的那个节点，即事件最初发生的节点。事件传播过程中，不同节点的监听函数内部的"),s("code",[t._v("Event.target")]),t._v("与"),s("code",[t._v("Event.currentTarget")]),t._v("属性的值是不一样的，前者总是不变的，后者则是指向监听函数所在的那个节点对象。")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token comment"}},[t._v("// HTML代码为")]),t._v("\n"),s("span",{attrs:{class:"token comment"}},[t._v('// <p id="para">Hello <em>World</em></p>')]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("hide")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("log")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token keyword"}},[t._v("this")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("===")]),t._v(" e"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("currentTarget"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{attrs:{class:"token comment"}},[t._v("// 总是 true")]),t._v("\n  console"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("log")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token keyword"}},[t._v("this")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("===")]),t._v(" e"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("target"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{attrs:{class:"token comment"}},[t._v("// 有可能不是 true")]),t._v("\n  e"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("target"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("visibility "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v("'hidden'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\npara"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("addEventListener")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'click'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" hide"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token boolean"}},[t._v("false")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),s("p",[t._v("上面代码中，如果在"),s("code",[t._v("para")]),t._v("节点的"),s("code",[t._v("<em>")]),t._v("子节点上面点击，则"),s("code",[t._v("e.target")]),t._v("指向"),s("code",[t._v("<em>")]),t._v("子节点，导致"),s("code",[t._v("<em>")]),t._v("子节点（即 World 部分）会不可见。如果点击 Hello  部分，则整个"),s("code",[t._v("para")]),t._v("都将不可见。")]),s("h2",{attrs:{id:"event-对象的实例方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#event-对象的实例方法","aria-hidden":"true"}},[t._v("#")]),t._v(" Event 对象的实例方法")]),s("h3",{attrs:{id:"event-preventdefault"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#event-preventdefault","aria-hidden":"true"}},[t._v("#")]),t._v(" Event.preventDefault()")]),s("p",[t._v("阻止默认动作")]),s("h3",{attrs:{id:"event-stoppropagation"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#event-stoppropagation","aria-hidden":"true"}},[t._v("#")]),t._v(" Event.stopPropagation()")]),s("p",[s("code",[t._v("stopPropagation")]),t._v("方法阻止事件在 DOM 中继续传播，防止再触发定义在别的节点上的监听函数，但是不包括在当前节点上其他的事件监听函数。")])])}],!1,null,null,null);a.default=e.exports}}]);